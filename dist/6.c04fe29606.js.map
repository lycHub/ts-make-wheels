{"version":3,"file":"6.c04fe29606.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/tools/EventEmitter.ts","webpack:///./src/demos/snake/snake-page.less","webpack:///./src/demos/snake/Options.ts","webpack:///./src/tools/number.ts","webpack:///./src/demos/snake/js/Food.ts","webpack:///./src/demos/snake/js/Snake.ts","webpack:///./src/demos/snake/js/Game.ts","webpack:///./src/demos/snake/snake-page.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 172);\n","/*\r\n* 这个自定义事件的类是参考黄大仙Bscroll的设计\r\n* */\r\ntype EventsMap = {\r\n  [name: string]: [Function, Object][];\r\n}\r\n\r\ntype TypesMap = {\r\n  [type: string]: string;\r\n}\r\n\r\nexport default class EventEmitter {\r\n  private events: EventsMap;\r\n  private eventTypes: TypesMap;\r\n  constructor(names: string[]) {\r\n    this.events = {};\r\n    this.eventTypes = {};\r\n    names.forEach(type => this.eventTypes[type] = type);\r\n  }\r\n  \r\n  on(type: string, fn: Function, context = this) {\r\n    if (!this.events[type]) {\r\n      this.events[type] = [];\r\n    }\r\n    \r\n    // 保存type事件对应的函数\r\n    this.events[type].push([fn, context]);\r\n  }\r\n  \r\n  // 触发type事件\r\n  trigger(type: string, ...args: any[]) {\r\n    let events = this.events[type];\r\n    if (!events) return;\r\n    \r\n    let len = events.length;\r\n    let eventsCopy = events.slice();\r\n    let ret;\r\n    for (let i = 0; i < len; i++) {\r\n      let event = eventsCopy[i];\r\n      let [fn, context] = event;\r\n      if (fn) {\r\n        ret = fn.apply(context, args);\r\n        if (ret === true) break;\r\n      }\r\n    }\r\n  }\r\n}","// extracted by mini-css-extract-plugin","type CommonOptions = { [key: string]: any };\r\n\r\nexport class Options {\r\n  private defaultOptions: CommonOptions;\r\n  constructor(options: CommonOptions) {\r\n    this.defaultOptions = options;\r\n  }\r\n  \r\n  \r\n  // 合并默认配置\r\n  merge<T>(target: T): T {\r\n    return Object.assign({}, this.defaultOptions, target);\r\n  }\r\n}","export function getRandom(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import { Options } from \"../Options.ts\";\r\nimport { getRandom } from \"../../../tools/number.ts\";\r\n\r\ntype FootOptions = {\r\n    // x?: number;\r\n    // y?: number;\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}\r\nexport default class Food extends Options {\r\n    private options: FootOptions;\r\n    coordinates = { x: 0, y: 0 };\r\n    private currentFood: HTMLElement;\r\n    constructor(options?: FootOptions) {\r\n        super({\r\n            // x: getRandom(0, 800),\r\n            // y: getRandom(0, 600),\r\n            width: 20,\r\n            height: 20,\r\n            color: '#f60'\r\n        });\r\n        \r\n        this.options = super.merge(options);\r\n        // console.log('options :', this.options);\r\n    }\r\n\r\n    // 渲染食物对象\r\n    render(map: HTMLElement) {\r\n        this.removeFood(map);\r\n        this.coordinates.x = getRandom(0, map.offsetWidth / this.options.width - 1) * this.options.width;\r\n        this.coordinates.y = getRandom(0, map.offsetHeight / this.options.height - 1) * this.options.height;\r\n        this.currentFood = document.createElement('div');\r\n        this.currentFood.style.width = this.options.width + 'px';\r\n        this.currentFood.style.height = this.options.height + 'px';\r\n        this.currentFood.style.backgroundColor = this.options.color;\r\n        this.currentFood.style.position = 'absolute';\r\n        this.currentFood.style.left = this.coordinates.x + 'px';\r\n        this.currentFood.style.top = this.coordinates.y + 'px';\r\n        map.appendChild(this.currentFood);\r\n    }\r\n\r\n    private removeFood(map: HTMLElement) {\r\n        if (this.currentFood) {\r\n            map.removeChild(this.currentFood);\r\n            this.currentFood = null;\r\n        }\r\n    }\r\n}","import { Options } from \"../Options.ts\";\r\nimport Food from \"./Food.ts\";\r\nimport Game from \"./Game.ts\";\r\n\r\nexport enum Direction { Left, Right, Up, Down };\r\ntype SnakeMoveDirection = Direction;\r\n\r\n// xy蛇神的坐标（x * width）\r\ntype SnakeBody = { x: number; y: number, color: string };\r\n\r\nexport type SnakeOptions = {\r\n    width: number;\r\n    height: number;\r\n    direction: SnakeMoveDirection;\r\n    speed: number;\r\n    body: SnakeBody[];\r\n};\r\nexport default class Snake extends Options {\r\n    readonly options: SnakeOptions;\r\n    private currentSnake: HTMLElement[] = [];\r\n    private map: HTMLElement;\r\n    constructor(options?: SnakeOptions) {\r\n        super({\r\n            width: 20,\r\n            height: 20,\r\n            direction: Direction.Right,\r\n            speed: 200,\r\n            body: [\r\n                {x: 3, y: 2, color: 'red' },\r\n                {x: 2, y: 2, color: 'blue' },\r\n                {x: 1, y: 2, color: 'blue' }\r\n            ]\r\n        });\r\n        \r\n        this.options = super.merge(options);\r\n    }\r\n\r\n    // 渲染蛇\r\n    render(map: HTMLElement) {\r\n        if (!this.map) this.map = map;\r\n        this.remove(this.map);\r\n        this.options.body.forEach(item => {\r\n            const div = document.createElement('div');\r\n            div.style.position = 'absolute';\r\n            div.style.width = this.options.width + 'px';\r\n            div.style.height = this.options.height + 'px';\r\n            div.style.left = item.x * this.options.width + 'px';\r\n            div.style.top = item.y * this.options.height + 'px';\r\n            div.style.backgroundColor = item.color;\r\n            this.currentSnake.push(div);\r\n            this.map.appendChild(div);\r\n        });\r\n    }\r\n\r\n    move(food: Food, game: Game, cb: () => void) {\r\n        const body = this.options.body;\r\n        for(let a = body.length - 1; a > 0; a--) {\r\n            // 每一格body都移动到他前面那个body上\r\n            body[a].x = body[a - 1].x;\r\n            body[a].y = body[a - 1].y;\r\n        }\r\n\r\n        const head = this.options.body[0];\r\n        \r\n        switch(this.options.direction) {\r\n            case Direction.Left:\r\n                head.x--;\r\n                break;\r\n            case Direction.Right:\r\n                head.x++;\r\n                break;\r\n            case Direction.Up:\r\n                head.y--;\r\n                break;\r\n            case Direction.Down:\r\n                head.y++;\r\n                break;\r\n        }\r\n\r\n        const headX = head.x * this.options.width;\r\n        const headY = head.y * this.options.height;\r\n\r\n        if (headX === food.coordinates.x && headY === food.coordinates.y) {\r\n            // 复制蛇身最后一节添加到body后面\r\n            const lastBody = this.options.body[this.options.body.length - 1];\r\n            this.options.body.push({ ...lastBody });\r\n            food.render(this.map);\r\n            this.options.speed = Math.max(10, this.options.speed - 30);\r\n            if (cb) cb();\r\n            game.runSnake(this.options.speed);\r\n        }\r\n    }\r\n\r\n\r\n    private remove(map: HTMLElement) {\r\n        for(let a = this.currentSnake.length - 1; a >= 0; a--) {\r\n            map.removeChild(this.currentSnake[a]);\r\n            this.currentSnake.splice(a, 1);\r\n        }\r\n    }\r\n}","import { Options } from \"../Options.ts\";\r\nimport Food from \"./Food.ts\";\r\nimport Snake, { Direction } from \"./Snake.ts\";\r\nimport EventEmitter from \"../../../tools/EventEmitter.ts\";\r\n\r\nexport default class Game extends EventEmitter {\r\n    private moving = false;\r\n    private score = 0;\r\n    private food: Food;\r\n    private snake: Snake;\r\n    private map: HTMLElement;\r\n    private timer: any;\r\n    \r\n    constructor(map: HTMLElement) {\r\n        super(['init', 'pause', 'over', 'score-change', 'refresh']);\r\n        this.map = map;\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.food = new Food();\r\n        this.snake = new Snake();\r\n        this.food.render(this.map);\r\n        this.snake.render(this.map);\r\n        this.bindKeyBoardEvts();\r\n        this.trigger('init');\r\n    }\r\n\r\n    start() {\r\n        this.runSnake();\r\n    }\r\n    \r\n    \r\n    pause() {\r\n        this.moving = false;\r\n        clearInterval(this.timer);\r\n        this.trigger('pause', this.score);\r\n    }\r\n\r\n    refresh() {\r\n        this.map.innerHTML = '';\r\n        this.pause();\r\n        this.init();\r\n        this.score = 0;\r\n        this.trigger('refresh');\r\n    }\r\n\r\n    runSnake(speed = 200) {\r\n        // console.log('speed :', speed);\r\n        this.moving = true;\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n        this.timer = setInterval(() => {\r\n            this.snake.move(this.food, this, () => this.trigger('score-change', ++this.score));\r\n            this.snake.render(this.map);\r\n\r\n            // 判断是否撞到边界\r\n            const maxX = this.map.offsetWidth / this.snake.options.width;\r\n            const maxY = this.map.offsetHeight / this.snake.options.height;\r\n            const head = this.snake.options.body[0];\r\n            if (head.x < 0 || head.x >= maxX || head.y < 0 || head.y >= maxY) {\r\n                this.trigger('over', this.score);\r\n                this.moving = false;\r\n                clearInterval(this.timer);\r\n            }\r\n        }, speed);\r\n    }\r\n\r\n\r\n    private bindKeyBoardEvts() {\r\n        document.addEventListener('keydown', (evt: KeyboardEvent) => {\r\n            // console.log('code', evt);\r\n            switch (evt.key) {\r\n                case 'ArrowUp':\r\n                this.snake.options.direction = Direction.Up;\r\n                break;\r\n                case 'ArrowDown':\r\n                this.snake.options.direction = Direction.Down;\r\n                break;\r\n                case 'ArrowLeft':\r\n                this.snake.options.direction = Direction.Left;\r\n                break;\r\n                case 'ArrowRight':\r\n                this.snake.options.direction = Direction.Right;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n}","import './snake-page.less';\r\nimport Game from './js/Game.ts';\r\n\r\n\r\nconst isCurrentPage = /snake/.test(location.href);\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n  if (isCurrentPage) {\r\n    const btns = document.getElementsByTagName('button');\r\n    const h2 = document.getElementsByTagName('h2')[0];\r\n    const map = document.getElementById('map');\r\n\r\n    const game = new Game(map);\r\n    game.on('score-change', function(score: number) {\r\n      console.log('score change', score);\r\n      h2.innerText = '当前得分：' + score;\r\n    });\r\n    game.on('over', function(score: number) {\r\n      alert('over, 当前得分：' + score);\r\n    });\r\n    game.on('refresh', function() {\r\n      h2.innerText = '当前得分：0';\r\n    });\r\n\r\n    btns[0].addEventListener('click', game.start.bind(game));\r\n    btns[1].addEventListener('click', game.pause.bind(game));\r\n    btns[2].addEventListener('click', game.refresh.bind(game));\r\n  }\r\n});"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;AC9CA;;;;;;;;;;;;;;ACEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;;;;ACbA;AACA;AACA;;;;;;;;;;;;;;;;ACFA;AACA;AASA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AAEA;AAAA;AAQA;AAAA;AAPA;AACA;AAQA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AC1FA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}