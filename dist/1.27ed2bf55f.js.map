{"version":3,"file":"1.27ed2bf55f.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/demos/color-picker/color-picker.less","webpack:///./src/demos/color-picker/Options.ts","webpack:///./src/demos/color-picker/ColorPicker.ts","webpack:///./src/demos/color-picker/color-picker.ts","webpack:///./src/tools/EventEmitter.ts","webpack:///./src/tools/dom.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 173);\n","// extracted by mini-css-extract-plugin","export type ColorValue = string | { r: number; g: number; b: number } | { h: number; s: number; b: number };\r\nexport type ColorFormat = 'hex' | 'rgb' | 'hsb';\r\n\r\nexport class Options {\r\n  // 可索引类型，该类下的所有属性的key必须是字符串，值为any\r\n  [key: string]: any;\r\n\r\n  // 默认颜色\r\n  defaultColor = '#ff0000';\r\n  \r\n  // 绑定的颜色模式，支持\"hex\", \"rgb\", \"hsb\r\n  format: ColorFormat = 'hex';\r\n  \r\n  // 自定义事件\r\n  onChanging: (value) => void;\r\n  onChange: (value) => void;\r\n  onInit: (value) => void;\r\n  \r\n  \r\n  // 合并默认配置\r\n  merge(options?: { [key: string]: any }) {\r\n    if (options) {\r\n      for (let key in options) {\r\n        this[key] = options[key];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}","import EventEmitter from \"../../tools/EventEmitter.ts\";\r\nimport {ColorValue, Options} from \"./Options.ts\";\r\nimport DomHandler from \"../../tools/dom.ts\";\r\n\r\n// 左面板尺寸\r\nconst REC = {\r\n  width: 150,\r\n  height: 150\r\n};\r\n\r\n\r\nexport default class ColorPicker extends EventEmitter {\r\n  // 配置项\r\n  private readonly options: Options;\r\n\r\n  // 容器\r\n  private el: HTMLElement;\r\n  \r\n  // 左侧面板\r\n  private colorSelector: HTMLElement;\r\n  \r\n  // 左侧圆点\r\n  private colorHandle : HTMLElement;\r\n  \r\n  // 右侧面板\r\n  private hueSelector: HTMLElement;\r\n  \r\n  // 右侧圆点\r\n  private hueHandle : HTMLElement;\r\n  \r\n  // 当前value\r\n  private value: any;\r\n  \r\n  // 是否正在左面板选取\r\n  private colorDragging = false;\r\n  \r\n  // 是否正在右面板选取\r\n  private hueDragging = false;\r\n  \r\n  private moveEvents = {};\r\n\r\n  // 事件句柄\r\n  private handleMove: (e: MouseEvent) => void;\r\n  private handleEnd: (e: MouseEvent) => void;\r\n  \r\n  private domHandle: DomHandler;\r\n\r\n  constructor(el: HTMLElement | string, options?: Partial<Options>) {\r\n    super(['changing', 'change']);\r\n    if (!el) return;\r\n    this.el = (typeof el === 'string' ? document.querySelector(el) : el) as HTMLElement;\r\n\r\n    this.colorSelector = <HTMLElement>this.el.querySelector('.ui-colorpicker-color-selector');\r\n    this.colorHandle = <HTMLElement>this.colorSelector.querySelector('.ui-colorpicker-color-handle');\r\n    this.hueSelector = <HTMLElement>this.el.querySelector('.ui-colorpicker-hue');\r\n    this.hueHandle = <HTMLElement>this.hueSelector.querySelector('.ui-colorpicker-hue-handle');\r\n    \r\n    // 合并选项\r\n    this.options = new Options().merge(options);\r\n \r\n    if (this.options.defaultColor) {\r\n      this.initValue(this.options.defaultColor);\r\n    }\r\n  \r\n    this.domHandle = new DomHandler();\r\n    \r\n    this.initEvents();\r\n    this.emitEvent('onInit', this.getValueToUpdate);\r\n  }\r\n  \r\n  \r\n  private initEvents() {\r\n    this.colorSelector.addEventListener('mousedown', this.onColorMousedown.bind(this));\r\n    this.hueSelector.addEventListener('mousedown', this.onHueMousedown.bind(this));\r\n  }\r\n  \r\n  \r\n  // 按下左侧面板\r\n  private onColorMousedown(event: MouseEvent) {\r\n    this.bindDocumentMouseListener();\r\n    // this.bindDocumentMouseupListener();\r\n  \r\n    this.colorDragging = true;\r\n    this.pickColor(event);\r\n  }\r\n  \r\n  // 点击右侧面板\r\n  onHueMousedown(event: MouseEvent) {\r\n    this.bindDocumentMouseListener();\r\n    \r\n    this.hueDragging = true;\r\n    this.pickHue(event);\r\n  }\r\n  \r\n  private bindDocumentMouseListener() {\r\n    this.handleMove = this.onMouseMove.bind(this);\r\n    this.handleEnd = this.onMouseUp.bind(this);\r\n    this.moveEvents = {\r\n      mousemove: this.handleMove,\r\n      mouseup: this.handleEnd,\r\n    }\r\n    this.domHandle.addEvents(window, this.moveEvents);\r\n  }\r\n  \r\n  private onMouseMove(event: MouseEvent) {\r\n    if (this.colorDragging) {\r\n      this.pickColor(event);\r\n    }\r\n  \r\n    if (this.hueDragging) {\r\n      this.pickHue(event);\r\n    }\r\n  }\r\n  \r\n  private onMouseUp() {\r\n    this.colorDragging = false;\r\n    this.hueDragging = false;\r\n    this.domHandle.removeEvents(window, this.moveEvents);\r\n    this.emitEvent('change', this.getValueToUpdate);\r\n    this.trigger('change', this.getValueToUpdate);\r\n  }\r\n  \r\n  // 左侧取色\r\n  private pickColor(event: MouseEvent) {\r\n    const rect = this.colorSelector.getBoundingClientRect();\r\n    // console.log(rect);\r\n    const top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\r\n    const left = rect.left + document.body.scrollLeft;\r\n    \r\n    // 由于validateHSB会限制取值范围(不能>100), 所以取这种算法\r\n    const saturation = Math.floor(100 * (Math.max(0, Math.min(REC.width, (event.pageX - left)))) / REC.width);\r\n    const brightness = Math.floor(100 * (REC.height - Math.max(0, Math.min(REC.height, (event.pageY - top)))) / REC.height);\r\n    this.value = this.validateHSB({\r\n      h: this.value.h,\r\n      s: saturation,\r\n      b: brightness\r\n    });\r\n    \r\n    this.updateUI();\r\n    this.emitEvent('onChanging', this.getValueToUpdate);\r\n    this.trigger('changing', this.getValueToUpdate);\r\n  }\r\n  \r\n  \r\n  // 右侧取色\r\n  private pickHue(event: MouseEvent) {\r\n    const top: number = this.hueSelector.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\r\n    this.value = this.validateHSB({\r\n      h: Math.floor(360 * (REC.height - Math.max(0, Math.min(REC.height, (event.pageY - top)))) / REC.height),\r\n      s: this.value.s,\r\n      b: this.value.b\r\n    });\r\n    \r\n    this.updateColorSelector();\r\n    this.updateUI();\r\n    this.emitEvent('onChanging', this.getValueToUpdate);\r\n    this.trigger('changing', this.getValueToUpdate);\r\n  }\r\n  \r\n  \r\n  private initValue(value: ColorValue) {\r\n    switch (this.options.format) {\r\n      case 'hex':\r\n        this.value = this.HEXtoHSB(value);\r\n        break;\r\n    \r\n      case 'rgb':\r\n        this.value = this.RGBtoHSB(value);\r\n        break;\r\n    \r\n      case 'hsb':\r\n        this.value = value;\r\n        break;\r\n    }\r\n  \r\n    this.updateColorSelector();\r\n    this.updateUI();\r\n  }\r\n  \r\n  get getValueToUpdate() {\r\n    let val: any;\r\n    switch (this.options.format) {\r\n      case 'hex':\r\n        val = '#' + this.HSBtoHEX(this.value);\r\n        break;\r\n    \r\n      case 'rgb':\r\n        val = this.HSBtoRGB(this.value);\r\n        break;\r\n    \r\n      default:\r\n        val = this.value;\r\n        break;\r\n    }\r\n  \r\n    return val;\r\n  }\r\n  \r\n  // 跟新左侧背景颜色\r\n  private updateColorSelector() {\r\n    if (this.colorSelector) {\r\n      const hsb = {\r\n        s: 100,\r\n        b: 100,\r\n        h: this.value.h,\r\n      };\r\n   \r\n      this.colorSelector.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\r\n    }\r\n  }\r\n  \r\n  private updateUI() {\r\n    if (this.colorHandle) {\r\n      this.colorHandle.style.left =  Math.floor(REC.width * this.value.s / 100) + 'px';\r\n      this.colorHandle.style.top =  Math.floor(REC.height * (100 - this.value.b) / 100) + 'px';\r\n      this.hueHandle.style.top = Math.floor(REC.height - (REC.height * this.value.h / 360)) + 'px';\r\n    }\r\n  }\r\n  \r\n  \r\n  // string转HSB\r\n  private HEXtoHSB(hex) {\r\n    return this.RGBtoHSB(this.HEXtoRGB(hex));\r\n  }\r\n  \r\n  // string转RGB\r\n  private HEXtoRGB(hex) {\r\n    let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\r\n  }\r\n  \r\n  \r\n  // hsb转string\r\n  private HSBtoHEX(hsb) {\r\n    return this.RGBtoHEX(this.HSBtoRGB(hsb));\r\n  }\r\n  \r\n  \r\n  // rgb转string\r\n  private RGBtoHEX(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16)\r\n    ];\r\n    \r\n    for (const key in hex) {\r\n      if (hex[key].length === 1) {\r\n        hex[key] = '0' + hex[key];\r\n      }\r\n    }\r\n    return hex.join('');\r\n  }\r\n  \r\n  // RGB转HSB\r\n  private RGBtoHSB(rgb) {\r\n    const hsb = {\r\n      h: 0,\r\n      s: 0,\r\n      b: 0\r\n    };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.b = max;\r\n    \r\n    hsb.s = max != 0 ? 255 * delta / max : 0;\r\n    if (hsb.s != 0) {\r\n      if (rgb.r == max) {\r\n        hsb.h = (rgb.g - rgb.b) / delta;\r\n      } else if (rgb.g == max) {\r\n        hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      } else {\r\n        hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n      }\r\n    } else {\r\n      hsb.h = -1;\r\n    }\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) {\r\n      hsb.h += 360;\r\n    }\r\n    hsb.s *= 100/255;\r\n    hsb.b *= 100/255;\r\n    return hsb;\r\n  }\r\n  \r\n  // hsb转rgb\r\n  private HSBtoRGB(hsb) {\r\n    let rgb = {\r\n      r: null, g: null, b: null\r\n    };\r\n    let h = Math.round(hsb.h);\r\n    let s = Math.round(hsb.s * 255 / 100);\r\n    let v = Math.round(hsb.b * 255 / 100);\r\n    \r\n    if (s === 0) {\r\n      rgb = {\r\n        r: v,\r\n        g: v,\r\n        b: v\r\n      };\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * ( h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {rgb.r = t1;\trgb.b = t2; rgb.g = t2 + t3}\r\n      else if (h < 120) {rgb.g = t1; rgb.b = t2;\trgb.r = t1 - t3}\r\n      else if (h < 180) {rgb.g = t1; rgb.r = t2;\trgb.b = t2 + t3}\r\n      else if (h < 240) {rgb.b = t1; rgb.r = t2;\trgb.g = t1 - t3}\r\n      else if (h < 300) {rgb.b = t1; rgb.g = t2;\trgb.r = t2 + t3}\r\n      else if (h < 360) {rgb.r = t1; rgb.g = t2;\trgb.b = t1 - t3}\r\n      else {rgb.r = 0; rgb.g = 0;\trgb.b = 0}\r\n    }\r\n    return {r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b)};\r\n  }\r\n  \r\n  \r\n  private validateHSB(hsb) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsb.h)),\r\n      s: Math.min(100, Math.max(0, hsb.s)),\r\n      b: Math.min(100, Math.max(0, hsb.b))\r\n    };\r\n  }\r\n  \r\n  private validateRGB(rgb) {\r\n    return {\r\n      r: Math.min(255, Math.max(0, rgb.r)),\r\n      g: Math.min(255, Math.max(0, rgb.g)),\r\n      b: Math.min(255, Math.max(0, rgb.b))\r\n    };\r\n  }\r\n  \r\n  private validateHEX(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i++) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n  \r\n  \r\n  // 发射自定义事件\r\n  private emitEvent(type: string, args: any) {\r\n    if (this.options[type]) {\r\n      this.options[type](args);\r\n    }\r\n  }\r\n}","import './color-picker.less';\r\nimport ColorPicker from \"./ColorPicker.ts\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n  console.log('color-picker');\r\n  const b = document.getElementsByTagName('b')[0];\r\n  const box = document.getElementsByClassName('color-box')[0] as HTMLElement;\r\n  const cp = new ColorPicker(box, {\r\n    defaultColor: '#49AF4F',\r\n    onInit(color) {\r\n      b.innerText = color;\r\n    },\r\n    onChanging(color) {\r\n      b.innerText = color;\r\n    }\r\n  });\r\n});","/*\r\n* 这个自定义事件的类是参考黄大仙Bscroll的设计\r\n* */\r\ntype EventsMap = {\r\n  [name: string]: [Function, Object][];\r\n}\r\n\r\ntype TypesMap = {\r\n  [type: string]: string;\r\n}\r\n\r\nexport default class EventEmitter {\r\n  private events: EventsMap;\r\n  private eventTypes: TypesMap;\r\n  constructor(names: string[]) {\r\n    this.events = {};\r\n    this.eventTypes = {};\r\n    names.forEach(type => this.eventTypes[type] = type);\r\n  }\r\n  \r\n  on(type: string, fn: Function, context = this) {\r\n    if (!this.events[type]) {\r\n      this.events[type] = [];\r\n    }\r\n    \r\n    // 保存type事件对应的函数\r\n    this.events[type].push([fn, context]);\r\n  }\r\n  \r\n  // 触发type事件\r\n  trigger(type: string, ...args: any[]) {\r\n    let events = this.events[type];\r\n    if (!events) return;\r\n    \r\n    let len = events.length;\r\n    let eventsCopy = events.slice();\r\n    let ret;\r\n    for (let i = 0; i < len; i++) {\r\n      let event = eventsCopy[i];\r\n      let [fn, context] = event;\r\n      if (fn) {\r\n        ret = fn.apply(context, args);\r\n        if (ret === true) break;\r\n      }\r\n    }\r\n  }\r\n}","export default class DomHandler {\r\n  addClass(element: any, className: string): void {\r\n    if (element.classList)\r\n      element.classList.add(className);\r\n    else\r\n      element.className += ' ' + className;\r\n  }\r\n  \r\n  addMultipleClasses(element: any, className: string): void {\r\n    if (element.classList) {\r\n      const styles: string[] = className.split(' ');\r\n      for (let i = 0; i < styles.length; i++) {\r\n        element.classList.add(styles[i]);\r\n      }\r\n      \r\n    } else {\r\n      const styles: string[] = className.split(' ');\r\n      for (let i = 0; i < styles.length; i++) {\r\n        element.className += ' ' + styles[i];\r\n      }\r\n    }\r\n  }\r\n  \r\n  removeClass(element: any, className: string): void {\r\n    if (element.classList)\r\n      element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n  }\r\n  \r\n  hasClass(element: any, className: string): boolean {\r\n    if (element.classList)\r\n      return element.classList.contains(className);\r\n    else\r\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n  }\r\n\r\n\r\n  appendChild(element: HTMLElement, target: HTMLElement) {\r\n    target.appendChild(element);\r\n  }\r\n\r\n  removeChild(element: HTMLElement, target: HTMLElement) {\r\n    target.removeChild(element);\r\n  }\r\n\r\n  getWindowScrollTop(): number {\r\n    let doc = document.documentElement;\r\n\r\n    // clientTop上边框距离\r\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n  }\r\n\r\n  getWindowScrollLeft(): number {\r\n    let doc = document.documentElement;\r\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n  }\r\n\r\n\r\n  fadeIn(element: HTMLElement, duration: number) {\r\n    element.style.opacity = '0';\r\n\r\n    let last = +new Date();\r\n    let opacity = 0;\r\n    const tick = function () {\r\n      // opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\r\n      opacity = +element.style.opacity + (new Date().getTime() - last) / duration;\r\n      element.style.opacity = opacity.toString();\r\n      last = +new Date();\r\n\r\n      if (opacity < 1) {\r\n        (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\r\n      }\r\n    };\r\n    tick();\r\n  }\r\n\r\n  getOuterWidth(el, margin?) {\r\n    let width = el.offsetWidth;\r\n\r\n    if (margin) {\r\n      const style = getComputedStyle(el);\r\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n\r\n  addEvents(target, obj: { [key: string]: Function }) {\r\n    for (const attr in obj) {\r\n      target.addEventListener(attr, obj[attr]);\r\n    }\r\n  }\r\n\r\n  removeEvents(target, obj: { [key: string]: Function }) {\r\n    for (const attr in obj) {\r\n      target.removeEventListener(attr, obj[attr]);\r\n    }\r\n  }\r\n\r\n  getStyle (element, styleName) {\r\n    if (!element || !styleName) return null;\r\n    styleName = camelCase(styleName);\r\n    if (styleName === 'float') {\r\n      styleName = 'cssFloat';\r\n    }\r\n    try {\r\n      const computed = document.defaultView.getComputedStyle(element, '');\r\n      return element.style[styleName] || computed ? computed[styleName] : null;\r\n    } catch(e) {\r\n      return element.style[styleName];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction camelCase(name) {\r\n  return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\r\n    return offset ? letter.toUpperCase() : letter;\r\n  }).replace(/^moz([A-Z])/, 'Moz$1');\r\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;;;;;;;;;;;;;;;;;ACGA;AAAA;AAIA;AACA;AAEA;AACA;AAiBA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAoCA;AAAA;AAdnWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;AC9CA;AAAA;AAkHA;AAjHA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;AAIA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}