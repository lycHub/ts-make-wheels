{"version":3,"file":"4.dae6a82539.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/demos/scroll-panel/scroll-panel.less","webpack:///./src/demos/scroll-panel/Options.ts","webpack:///./src/demos/scroll-panel/ScrollPanel.ts","webpack:///./src/demos/scroll-panel/scroll-panel.ts","webpack:///./src/tools/EventEmitter.ts","webpack:///./src/tools/dom.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 171);\n","// extracted by mini-css-extract-plugin","// 自定义事件的函数类型，axis是拖拽的滚动条\r\ntype EventFunc = {\r\n  (arg: { axis?: string, scrollPoi?: number }): void;\r\n}\r\n\r\nexport class Options {\r\n  // 可索引类型，该类下的所有属性的key必须是字符串，值为any\r\n  [key: string]: any;\r\n  \r\n  \r\n  // 最外层dom的样式\r\n  style = {\r\n    position: 'relative',\r\n    overflow: 'hidden'\r\n  };\r\n\r\n  // 禁止x,滚动\r\n  disableX = false;\r\n  disableY = false;\r\n  \r\n\r\n  // 拖拽结束事件\r\n  onDragEnd: EventFunc;\r\n\r\n  // 拖拽中\r\n  onDraging: EventFunc;\r\n\r\n  // 开始拖拽\r\n  onDragStart: EventFunc;\r\n\r\n\r\n  onInit: () => void;\r\n  \r\n  \r\n  // 合并默认配置\r\n  merge(options?: { [key: string]: any }) {\r\n    if (options) {\r\n      for (let key in options) {\r\n        this[key] = options[key];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}","import { Options } from './Options.ts';\r\nimport DomHandler from '../../tools/dom.ts';\r\nimport EventEmitter from \"../../tools/EventEmitter.ts\";\r\n\r\nexport class ScrollPanel extends EventEmitter {\r\n  readonly options: Options;\r\n\r\n  // 记录滚动条y的位置\r\n  private lastPageY: number;\r\n\r\n  // 记录滚动条x的位置\r\n  private lastPageX: number;\r\n\r\n  // 当前点击的滚动条\r\n  private isXBarClicked: boolean;\r\n  private isYBarClicked: boolean;\r\n\r\n  // 要用到的dom集合\r\n  private panelDoms: { [key: string]: HTMLElement };\r\n\r\n\r\n  // 可视区height / 内容区height\r\n  private scrollYRatio: number;\r\n\r\n  // 可视区width / 内容区width\r\n  private scrollXRatio: number;\r\n\r\n  // 定时器函数\r\n  private timeoutFrame: any = fn => setTimeout(fn, 0);\r\n\r\n  private domHandler: DomHandler;\r\n\r\n  // 保存一系列dom绑定事件\r\n  private moveBarH: () => void;\r\n  private onXBarMouseDownH: (e: MouseEvent | TouchEvent) => void;\r\n  private onYBarMouseDownH: (e: MouseEvent | TouchEvent) => void;\r\n  private onDocumentMouseMoveH: (e: MouseEvent | TouchEvent) => void;\r\n  private onDocumentMouseUpH: (e: MouseEvent | TouchEvent) => void;\r\n\r\n  private container: HTMLElement;\r\n\r\n  constructor(el: Element | string, options?: Partial<Options>) {\r\n    super(['dragStart', 'dragMove', 'dragEnd']);\r\n    this.domHandler = new DomHandler();\r\n\r\n    // 合并选项\r\n    this.options = new Options().merge(options);\r\n    this.container = <HTMLElement>(typeof el === 'string' ? document.querySelector(el) : el);\r\n    if (!this.container) return;\r\n\r\n    this.container.style.position = this.options.style.position;\r\n    this.container.style.overflow = this.options.style.overflow;\r\n\r\n    this.initScrollBar();\r\n    this.initBarSize();\r\n    this.initEvents();\r\n  }\r\n\r\n  private initScrollBar() {\r\n    const barDom = ` <div class=\"bar-wrap bar-wrap-x\">\r\n    <div class=\"ui-scrollpanel-bar ui-scrollpanel-bar-x\"></div>\r\n  </div>\r\n  <div class=\"bar-wrap bar-wrap-y\">\r\n    <div class=\"ui-scrollpanel-bar ui-scrollpanel-bar-y\"></div>\r\n  </div>`;\r\n    this.container.innerHTML += barDom;\r\n\r\n\r\n    this.panelDoms = {\r\n      containerViewChild: this.container,\r\n      contentViewChild: this.container.querySelector('.ui-scrollpanel-content'), // 第一个子节点\r\n      xBarWrapViewChild: this.container.querySelector('.bar-wrap-x'),\r\n      xBarViewChild: this.container.querySelector('.ui-scrollpanel-bar-x'),\r\n      yBarWrapViewChild: this.container.querySelector('.bar-wrap-y'),\r\n      yBarViewChild: this.container.querySelector('.ui-scrollpanel-bar-y')\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // 初始化x、y滚动条的尺寸\r\n  private initBarSize() {\r\n    const content = this.panelDoms.contentViewChild;\r\n\r\n    // 计算x滚动条width\r\n    // 真实宽度\r\n    const totalWidth = content.scrollWidth;\r\n\r\n    // 可视区宽度\r\n    const ownWidth = content.clientWidth;\r\n\r\n    // 显示长度（滑块长度） / 总长度（显示）\r\n    this.scrollXRatio = ownWidth / totalWidth;\r\n    const xBar = this.panelDoms.xBarViewChild;\r\n    xBar.style.width = (this.scrollXRatio * 100) + '%';\r\n\r\n\r\n\r\n    // 计算y滚动条height\r\n    const totalHeight = content.scrollHeight;\r\n    const ownHeight = content.clientHeight;\r\n    this.scrollYRatio = ownHeight / totalHeight;\r\n    const yBar = this.panelDoms.yBarViewChild;\r\n    yBar.style.height = (this.scrollYRatio * 100) + '%';\r\n  }\r\n\r\n\r\n  // 绑定各种事件\r\n  private initEvents() {\r\n    // 用变量保存事件主要是为了保证这些dom事件里的this指向\r\n    // 如果在每个事件函数里单独处理this，那不用这么做也行，但是移除事件监听可能会有问题\r\n    this.moveBarH = this.moveBar.bind(this);\r\n    this.moveBar();\r\n    this.onXBarMouseDownH = this.onXBarMouseDown.bind(this);\r\n    this.onYBarMouseDownH = this.onYBarMouseDown.bind(this);\r\n    this.onDocumentMouseMoveH = this.onDocumentMouseMove.bind(this);\r\n    this.onDocumentMouseUpH = this.onDocumentMouseUp.bind(this);\r\n\r\n    this.panelDoms.xBarWrapViewChild.addEventListener('mousedown', this.onXBarMouseDownH);\r\n    this.panelDoms.xBarWrapViewChild.addEventListener('touchstart', this.onXBarMouseDownH);\r\n\r\n    this.panelDoms.yBarWrapViewChild.addEventListener('mousedown', this.onYBarMouseDownH);\r\n    this.panelDoms.yBarWrapViewChild.addEventListener('touchstart', this.onYBarMouseDownH);\r\n  \r\n    window.addEventListener('resize', this.moveBarH);\r\n    this.panelDoms.contentViewChild.addEventListener('scroll', this.moveBarH);\r\n  }\r\n\r\n\r\n   // 改变滚动条位置\r\n   private moveBar() {\r\n    // console.log('moveBar');\r\n    const content = this.panelDoms.contentViewChild;\r\n    if (!this.options.disableX) {\r\n      this.moveXbar();\r\n    }else {\r\n      const xBarWrapViewChild = this.panelDoms.xBarWrapViewChild;\r\n      this.domHandler.addClass(xBarWrapViewChild, 'ui-scrollpanel-hidden');\r\n      this.domHandler.addClass(content, 'disableX');\r\n    }\r\n    if (!this.options.disableY) {\r\n      this.moveYbar();\r\n    }else {\r\n      const yBarWrap = this.panelDoms.yBarWrapViewChild;\r\n      this.domHandler.addClass(yBarWrap, 'ui-scrollpanel-hidden');\r\n      this.domHandler.addClass(content, 'disableY');\r\n    }\r\n  }\r\n\r\n\r\n  private moveXbar() {\r\n    // console.log('moveXbar');\r\n    const { scrollLeft, scrollWidth } = this.panelDoms.contentViewChild;\r\n    const xBar = this.panelDoms.xBarViewChild;\r\n    const xBarWrap = this.panelDoms.xBarWrapViewChild;\r\n  \r\n    this.requestAnimationFrame(() => {\r\n      if (this.scrollXRatio >= 1) { // 水平方向未超出\r\n        this.domHandler.addClass(xBarWrap, 'ui-scrollpanel-hidden');\r\n      } else {\r\n        this.domHandler.removeClass(xBarWrap, 'ui-scrollpanel-hidden');\r\n        xBar.style.left = (scrollLeft / scrollWidth) * 100 + '%';\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private moveYbar() {\r\n    const { scrollTop, scrollHeight } = this.panelDoms.contentViewChild;\r\n    const yBar = this.panelDoms.yBarViewChild;\r\n    const yBarWrap = this.panelDoms.yBarWrapViewChild;\r\n  \r\n    this.requestAnimationFrame(() => {\r\n    \r\n      if (this.scrollYRatio >= 1) { // 垂直方向未超出\r\n        this.domHandler.addClass(yBarWrap, 'ui-scrollpanel-hidden');\r\n      } else {\r\n        this.domHandler.removeClass(yBarWrap, 'ui-scrollpanel-hidden');\r\n        yBar.style.top = (scrollTop / scrollHeight) * 100 + '%';\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onYBarMouseDown(e: MouseEvent) {\r\n    if (e.cancelable) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n    \r\n    this.isYBarClicked = true;\r\n    this.lastPageY = this.getPoint(e);\r\n    this.bindDocEvent();\r\n    this.emitEvent('onDragStart', {axis: 'y'});\r\n    this.trigger('dragStart', {axis: 'y'});\r\n  }\r\n  \r\n  onXBarMouseDown(e: MouseEvent) {\r\n    // console.log('onXBarMouseDown', this);\r\n    if (e.cancelable) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n    \r\n    this.isXBarClicked = true;\r\n    this.lastPageX = this.getPoint(e);\r\n    this.bindDocEvent();\r\n    this.emitEvent('onDragStart', {axis: 'x'});\r\n    this.trigger('dragStart', {axis: 'y'});\r\n  }\r\n  \r\n  onDocumentMouseMove(e: MouseEvent) {\r\n    // console.log('onDocumentMouseMove', this);\r\n    if (this.isXBarClicked) {\r\n      this.onMouseMoveForXBar(e);\r\n    } else {\r\n      this.onMouseMoveForYBar(e);\r\n    }\r\n  }\r\n  \r\n  // 内容滚动\r\n  onMouseMoveForXBar(e: MouseEvent) {\r\n    // 移动的距离\r\n    const deltaX = this.getPoint(e) - this.lastPageX;\r\n    this.lastPageX = this.getPoint(e);\r\n    // console.log('deltaX', deltaX);\r\n  \r\n    this.requestAnimationFrame(() => {\r\n      /*\r\n      * deltaX * scrollWidth / clientWidth = scrollLeft\r\n      * deltaX * scrollWidth = scrollLeft * clientWidth\r\n      * scrollLeft / scrollWidth = deltaX / clientWidth\r\n      * */\r\n      const content = this.panelDoms.contentViewChild;\r\n      content.scrollLeft += deltaX / this.scrollXRatio;\r\n      this.emitEvent('onDragMove', { axis: 'x', scrollPoi: content.scrollLeft });\r\n      this.trigger('dragMove', { axis: 'x', scrollPoi: content.scrollLeft });\r\n    });\r\n  }\r\n  \r\n  onMouseMoveForYBar(e: MouseEvent) {\r\n    // 与鼠标按下时的差值\r\n    const deltaY = this.getPoint(e) - this.lastPageY;\r\n    this.lastPageY = this.getPoint(e);\r\n    \r\n    this.requestAnimationFrame(() => {\r\n      // console.log(deltaY / this.scrollYRatio);\r\n      const content = this.panelDoms.contentViewChild;\r\n      content.scrollTop += deltaY / this.scrollYRatio;\r\n      this.emitEvent('onDragMove', { axis: 'y', scrollPoi: content.scrollTop });\r\n      this.trigger('dragMove', { axis: 'y', scrollPoi: content.scrollTop });\r\n    });\r\n  }\r\n  \r\n  onDocumentMouseUp(e: Event) {\r\n    // console.log('onDocumentMouseUp', this);\r\n    document.removeEventListener('mousemove', this.onDocumentMouseMoveH);\r\n    document.removeEventListener('mouseup', this.onDocumentMouseUpH);\r\n    this.emitEvent('onDragEnd');\r\n    this.trigger('dragEnd');\r\n    this.isXBarClicked = false;\r\n    this.isYBarClicked = false;\r\n  }\r\n  \r\n  private getPoint(event) {\r\n    return this.isYBarClicked\r\n      ? event.type.indexOf(\"touch\") !== -1\r\n        ? event.touches[0].clientY\r\n        : event.clientY\r\n      : event.type.indexOf(\"touch\") !== -1\r\n        ? event.touches[0].clientX\r\n        : event.clientX;\r\n  }\r\n\r\n\r\n\r\n  private bindDocEvent() {\r\n    const handleEvts = {\r\n      mousemove: this.onDocumentMouseMoveH,\r\n      touchmove: this.onDocumentMouseMoveH,\r\n      mouseup: this.onDocumentMouseUpH,\r\n      touchend: this.onDocumentMouseUpH\r\n    };\r\n    for (const evt in handleEvts) {\r\n      document.addEventListener(evt, handleEvts[evt]);\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  private requestAnimationFrame(f: Function) {\r\n    const frame = window.requestAnimationFrame || this.timeoutFrame;\r\n    frame(f);\r\n  }\r\n\r\n\r\n   // 发射自定义事件\r\n   private emitEvent(type: string, ...args: any[]) {\r\n    if (this.options[type]) {\r\n      this.options[type](args);\r\n    }\r\n  }\r\n}","import \"./scroll-panel.less\";\r\nimport {ScrollPanel} from \"./ScrollPanel.ts\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n  const spanEls = document.querySelectorAll('.exs .ui-scrollpanel');\r\n  const panel = new ScrollPanel(spanEls[0]);\r\n\r\n\r\n\r\n  const panel2 = new ScrollPanel(spanEls[1], {\r\n    disableX: true,\r\n    onDragStart(arg) {\r\n      console.log('onDragStart', arg);\r\n    },\r\n    onDragMove(arg) {\r\n      console.log('onDragMove', arg);\r\n    },\r\n    onDragEnd(arg) {\r\n      console.log('onDragEnd', arg);\r\n    }\r\n  });\r\n\r\n\r\n  const panel3 = new ScrollPanel(spanEls[2], {\r\n    disableY: true\r\n  });\r\n\r\n  panel3.on('dragStart', function(arg){\r\n    console.log('DragStart', arg);\r\n  });\r\n  panel3.on('dragMove', function(arg){\r\n    console.log('DragMove', arg);\r\n  });\r\n  panel3.on('dragEnd', function(arg){\r\n    console.log('DragEnd', arg);\r\n  });\r\n});","/*\r\n* 这个自定义事件的类是参考黄大仙Bscroll的设计\r\n* */\r\ntype EventsMap = {\r\n  [name: string]: [Function, Object][];\r\n}\r\n\r\ntype TypesMap = {\r\n  [type: string]: string;\r\n}\r\n\r\nexport default class EventEmitter {\r\n  private events: EventsMap;\r\n  private eventTypes: TypesMap;\r\n  constructor(names: string[]) {\r\n    this.events = {};\r\n    this.eventTypes = {};\r\n    names.forEach(type => this.eventTypes[type] = type);\r\n  }\r\n  \r\n  on(type: string, fn: Function, context = this) {\r\n    if (!this.events[type]) {\r\n      this.events[type] = [];\r\n    }\r\n    \r\n    // 保存type事件对应的函数\r\n    this.events[type].push([fn, context]);\r\n  }\r\n  \r\n  // 触发type事件\r\n  trigger(type: string, ...args: any[]) {\r\n    let events = this.events[type];\r\n    if (!events) return;\r\n    \r\n    let len = events.length;\r\n    let eventsCopy = events.slice();\r\n    let ret;\r\n    for (let i = 0; i < len; i++) {\r\n      let event = eventsCopy[i];\r\n      let [fn, context] = event;\r\n      if (fn) {\r\n        ret = fn.apply(context, args);\r\n        if (ret === true) break;\r\n      }\r\n    }\r\n  }\r\n}","export default class DomHandler {\r\n  addClass(element: any, className: string): void {\r\n    if (element.classList)\r\n      element.classList.add(className);\r\n    else\r\n      element.className += ' ' + className;\r\n  }\r\n  \r\n  addMultipleClasses(element: any, className: string): void {\r\n    if (element.classList) {\r\n      const styles: string[] = className.split(' ');\r\n      for (let i = 0; i < styles.length; i++) {\r\n        element.classList.add(styles[i]);\r\n      }\r\n      \r\n    } else {\r\n      const styles: string[] = className.split(' ');\r\n      for (let i = 0; i < styles.length; i++) {\r\n        element.className += ' ' + styles[i];\r\n      }\r\n    }\r\n  }\r\n  \r\n  removeClass(element: any, className: string): void {\r\n    if (element.classList)\r\n      element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n  }\r\n  \r\n  hasClass(element: any, className: string): boolean {\r\n    if (element.classList)\r\n      return element.classList.contains(className);\r\n    else\r\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\r\n  }\r\n\r\n\r\n  appendChild(element: HTMLElement, target: HTMLElement) {\r\n    target.appendChild(element);\r\n  }\r\n\r\n  removeChild(element: HTMLElement, target: HTMLElement) {\r\n    target.removeChild(element);\r\n  }\r\n\r\n  getWindowScrollTop(): number {\r\n    let doc = document.documentElement;\r\n\r\n    // clientTop上边框距离\r\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n  }\r\n\r\n  getWindowScrollLeft(): number {\r\n    let doc = document.documentElement;\r\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n  }\r\n\r\n\r\n  fadeIn(element: HTMLElement, duration: number) {\r\n    element.style.opacity = '0';\r\n\r\n    let last = +new Date();\r\n    let opacity = 0;\r\n    const tick = function () {\r\n      // opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\r\n      opacity = +element.style.opacity + (new Date().getTime() - last) / duration;\r\n      element.style.opacity = opacity.toString();\r\n      last = +new Date();\r\n\r\n      if (opacity < 1) {\r\n        (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\r\n      }\r\n    };\r\n    tick();\r\n  }\r\n\r\n  getOuterWidth(el, margin?) {\r\n    let width = el.offsetWidth;\r\n\r\n    if (margin) {\r\n      const style = getComputedStyle(el);\r\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n\r\n  addEvents(target, obj: { [key: string]: Function }) {\r\n    for (const attr in obj) {\r\n      target.addEventListener(attr, obj[attr]);\r\n    }\r\n  }\r\n\r\n  removeEvents(target, obj: { [key: string]: Function }) {\r\n    for (const attr in obj) {\r\n      target.removeEventListener(attr, obj[attr]);\r\n    }\r\n  }\r\n\r\n  getStyle (element, styleName) {\r\n    if (!element || !styleName) return null;\r\n    styleName = camelCase(styleName);\r\n    if (styleName === 'float') {\r\n      styleName = 'cssFloat';\r\n    }\r\n    try {\r\n      const computed = document.defaultView.getComputedStyle(element, '');\r\n      return element.style[styleName] || computed ? computed[styleName] : null;\r\n    } catch(e) {\r\n      return element.style[styleName];\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction camelCase(name) {\r\n  return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\r\n    return offset ? letter.toUpperCase() : letter;\r\n  }).replace(/^moz([A-Z])/, 'Moz$1');\r\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;;;;;;;;;;;;;;ACKA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAyBA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AAEA;AAAA;AAqCA;AAAA;AAdA;AACA;AAeA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AChTA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;AC9CA;AAAA;AAkHA;AAjHA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;AAIA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}