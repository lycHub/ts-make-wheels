{"version":3,"file":"0.e923655e3f.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/tools/EventEmitter.ts","webpack:///./src/demos/carousel/carousel-page.less","webpack:///./src/demos/carousel/Options.ts","webpack:///./src/demos/carousel/Carousel.ts","webpack:///./src/demos/carousel/carousel-page.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 178);\n","/*\r\n* 这个自定义事件的类是参考黄大仙Bscroll的设计\r\n* */\r\ntype EventsMap = {\r\n  [name: string]: [Function, Object][];\r\n}\r\n\r\ntype TypesMap = {\r\n  [type: string]: string;\r\n}\r\n\r\nexport default class EventEmitter {\r\n  private events: EventsMap;\r\n  private eventTypes: TypesMap;\r\n  constructor(names: string[]) {\r\n    this.events = {};\r\n    this.eventTypes = {};\r\n    names.forEach(type => this.eventTypes[type] = type);\r\n  }\r\n  \r\n  on(type: string, fn: Function, context = this) {\r\n    if (!this.events[type]) {\r\n      this.events[type] = [];\r\n    }\r\n    \r\n    // 保存type事件对应的函数\r\n    this.events[type].push([fn, context]);\r\n  }\r\n  \r\n  // 触发type事件\r\n  trigger(type: string, ...args: any[]) {\r\n    let events = this.events[type];\r\n    if (!events) return;\r\n    \r\n    let len = events.length;\r\n    let eventsCopy = events.slice();\r\n    let ret;\r\n    for (let i = 0; i < len; i++) {\r\n      let event = eventsCopy[i];\r\n      let [fn, context] = event;\r\n      if (fn) {\r\n        ret = fn.apply(context, args);\r\n        if (ret === true) break;\r\n      }\r\n    }\r\n  }\r\n}","// extracted by mini-css-extract-plugin","export class Options {\r\n  // 可索引类型，该类下的所有属性的key必须是字符串，值为any\r\n  [key: string]: any;\r\n  \r\n  \r\n  loop = false;\r\n  \r\n  // 切换速度\r\n  speed = 0.3;\r\n  \r\n  // 自动播放间隔\r\n  delay = 2000;\r\n  \r\n  autoplay = false;\r\n  \r\n  // 自定义事件\r\n  onTransitionEnd: (index: number) => void;\r\n  onInit: () => void;\r\n  \r\n  \r\n  // 合并默认配置\r\n  merge(options?: { [key: string]: any }) {\r\n    if (options) {\r\n      for (let key in options) {\r\n        this[key] = options[key];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}","import EventEmitter from \"../../tools/EventEmitter.ts\";\r\nimport {Options} from \"./Options.ts\";\r\n\r\nexport default class Carousel extends EventEmitter {\r\n  // 配置项\r\n  private readonly options: Options;\r\n\r\n\r\n  // 容器\r\n  private readonly el: HTMLElement;\r\n  private slideWrapEl: HTMLElement;\r\n  \r\n  private pagenationWrapEl: HTMLElement;\r\n  private slides: NodeListOf<Element>;\r\n  \r\n  // 容器宽度\r\n  private readonly elWidth: number;\r\n\r\n  private activeIndex = 0;\r\n\r\n  // 是否正在过度\r\n  private isTransiting = false;\r\n\r\n  private timer: any;\r\n  constructor(el: HTMLElement | string, options?: Partial<Options>) {\r\n    super(['transitionEnd']);\r\n    if (!el) return;\r\n    this.el = (typeof el === 'string' ? document.querySelector(el) : el) as HTMLElement;\r\n    this.elWidth = this.el.offsetWidth;\r\n    this.slideWrapEl = this.el.querySelector('.carousel-wrap') as HTMLElement;\r\n\r\n    // 合并选项\r\n    this.options = new Options().merge(options);\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.initPagenation();\r\n\r\n    // 左箭头\r\n    const arrowLeft = document.createElement('div');\r\n    arrowLeft.className = 'carousel-arrow left';\r\n\r\n    // 右箭头\r\n    const arrowRight = document.createElement('div');\r\n    arrowRight.className = 'carousel-arrow right';\r\n    [this.pagenationWrapEl, arrowLeft, arrowRight].forEach(item => this.el.appendChild(item));\r\n\r\n    // 初始化事件\r\n    this._initEvents();\r\n    this.autoPlay();\r\n  }\r\n\r\n  // 初始化分页器\r\n  private initPagenation() {\r\n    this.slides = this.slideWrapEl.querySelectorAll('.carousel-slide');\r\n    const dotNum = this.slides.length;\r\n    let wrapLen = dotNum;\r\n\r\n    if (this.options.loop) {\r\n      // 复制首尾两个slide分别放在slideWrapEl的尾首\r\n      const firstNodeCopy = this.slideWrapEl.firstElementChild.cloneNode(true);\r\n      const lastNodeCopy = this.slideWrapEl.lastElementChild.cloneNode(true);\r\n      this.slideWrapEl.insertBefore(lastNodeCopy, this.slideWrapEl.firstElementChild);\r\n      this.slideWrapEl.appendChild(firstNodeCopy);\r\n      wrapLen += 2;\r\n      this.slideWrapEl.style.left = -this.elWidth + 'px';\r\n    }\r\n\r\n    this.slideWrapEl.style.width = wrapLen * 100 + '%';\r\n\r\n    // 分页器\r\n    this.pagenationWrapEl = document.createElement('div');\r\n    this.pagenationWrapEl.className = 'carousel-pagination-wrap';\r\n    let iEl = '';\r\n\r\n    for (let a = 0; a < dotNum; a++) {\r\n      iEl += `<i class=\"${a === this.activeIndex ? 'active' : ''}\"></i>`;\r\n    }\r\n    this.pagenationWrapEl.innerHTML = iEl;\r\n  }\r\n\r\n\r\n  // 绑定事件\r\n  private _initEvents() {\r\n    const pagenations = this.pagenationWrapEl.children;\r\n    const arrowLeft = this.el.querySelector('.carousel-arrow.left');\r\n    const arrowRight = this.el.querySelector('.carousel-arrow.right');\r\n    arrowLeft.addEventListener('click', () => this.go(-1));\r\n    arrowRight.addEventListener('click', () => this.go(1));\r\n\r\n    for(let a = 0; a < pagenations.length; a++) {\r\n      pagenations[a].addEventListener('click', () => this.navigation(a));\r\n    }\r\n\r\n    this.slideWrapEl.addEventListener('webkitTransitionEnd', this.onTransitionEnd.bind(this));\r\n    this.el.addEventListener('mouseenter', this.clearInterval.bind(this));\r\n    this.el.addEventListener('mouseleave', this.autoPlay.bind(this));\r\n    this.emitEvent('onInit');\r\n  }\r\n\r\n  private go(dir: number) {\r\n    if (this.isTransiting) return;\r\n    this.isTransiting = true;\r\n    this.slideWrapEl.style.transitionDuration = this.options.speed + 's';\r\n    const len = this.slides.length;\r\n    const index = dir > 0 ? this.activeIndex + 1 : this.activeIndex - 1;\r\n    this.activeIndex = (index + len) % len;\r\n      if (this.options.loop) {\r\n        this.loop(dir);\r\n      }else{\r\n        this.slideWrapEl.style.left = -this.activeIndex * this.elWidth + 'px';\r\n      }\r\n    this.updateDots(this.activeIndex);\r\n  }\r\n  \r\n\r\n  private loop(dir: number) {\r\n    const oldLeft = this.getLeft(this.slideWrapEl);\r\n    \r\n    // 这里可以利用下dir的正负\r\n    // const newLeft = dir > 0 ? oldLeft - this.elWidth : oldLeft + this.elWidth;\r\n    const newLeft = oldLeft + this.elWidth * -dir;\r\n    this.slideWrapEl.style.left = newLeft + 'px';\r\n  }\r\n\r\n  // 点击圆点导航\r\n  private navigation(index: number) {\r\n    if (this.activeIndex !== index) {\r\n      this.slideWrapEl.style.transitionDuration = this.options.speed + 's';\r\n      this.activeIndex = index;\r\n      this.slideWrapEl.style.left = -(this.activeIndex + 1) * this.elWidth + 'px';\r\n      this.updateDots(index);\r\n    }\r\n  }\r\n\r\n  // 底部圆点\r\n  private updateDots(index: number) {\r\n    // console.log(index);\r\n    const dots = this.pagenationWrapEl.childNodes;\r\n    for (let a = 0; a < dots.length; a++) {\r\n      (<HTMLElement>dots[a]).classList.remove('active');\r\n    }\r\n    (<HTMLElement>dots[index]).classList.add('active');\r\n  }\r\n\r\n  private onTransitionEnd() {\r\n    // console.log('end');\r\n    if (this.options.loop) {\r\n      const left = this.getLeft(this.slideWrapEl);\r\n      if (left >= 0) {\r\n        this.slideWrapEl.style.transitionDuration = '0s';\r\n        this.slideWrapEl.style.left = '-4000px';\r\n        // console.log('跳最后一个');\r\n      }else if (left <= -(this.slides.length + 1) * this.elWidth) {\r\n        this.slideWrapEl.style.transitionDuration = '0s';\r\n        this.slideWrapEl.style.left = '-800px';\r\n        // console.log('跳第一个');\r\n      }\r\n    }\r\n    this.isTransiting = false;\r\n    \r\n    // 发射选中事件，响应DatePicker.on方法\r\n    this.trigger('transitionEnd', this.activeIndex);\r\n    \r\n    this.emitEvent('onTransitionEnd', this.activeIndex);\r\n  }\r\n  \r\n  private autoPlay() {\r\n    if (this.options.autoplay) {\r\n      this.timer = setInterval(() => this.go(1), this.options.delay);\r\n    }\r\n  }\r\n  \r\n  private clearInterval() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n  }\r\n\r\n  private getLeft(el: HTMLElement): number{\r\n    return Number(el.style.left.slice(0, -2));\r\n  }\r\n\r\n  // 发射自定义事件\r\n  private emitEvent(type: string, ...args: any[]) {\r\n    if (this.options[type]) {\r\n      this.options[type](args);\r\n    }\r\n  }\r\n\r\n}","import './carousel-page.less';\r\nimport Carousel from './Carousel.ts';\r\n\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n  const carousels = document.getElementsByClassName('carousel');\r\n  const carousel = new Carousel(<HTMLElement>carousels[0], {\r\n    loop: true,\r\n    onInit() {\r\n      console.log('onInit');\r\n    },\r\n    onTransitionEnd(index: number) {\r\n      console.log('onTransitionEnd：' + index);\r\n    }\r\n  });\r\n  \r\n  \r\n  const carousel2 = new Carousel(<HTMLElement>carousels[1], {\r\n    loop: true,\r\n    autoplay: true,\r\n    delay: 1000\r\n  });\r\n  carousel2.on('transitionEnd', function (index) {\r\n    console.log('transitionEnd：' + index);\r\n  });\r\n});"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;AC9CA;;;;;;;;;;;;;;;;;ACAA;AAAA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AAgBA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AAAA;AAqBA;AAAA;AANA;AAEA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AADA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;AChMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}